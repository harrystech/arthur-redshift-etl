#! /bin/bash

# Create a credentials file for the validation pipeline.

DEFAULT_VALIDATION_FOLDER="validation"

set -o errexit -o nounset

show_usage_and_exit() {
  cat <<USAGE

Usage: $(basename "$0") <bucket_name> <prefix> [<validation-folder>]

This will create an additional credentials file needed for the validation pipeline.
By changing the target database from "database" to "validation_database", we can make sure that
the validation pipeline runs on an empty and separate database.

The validation folder name defaults to "$DEFAULT_VALIDATION_FOLDER".
That is the folder under the environment in "prefix" to be used for the validation setup.

USAGE
  exit "${1-0}"
}

case "${1-help}" in
  -h|--help|help)
    show_usage_and_exit
    ;;
esac

if [[ $# -lt 2 || $# -gt 3 ]]; then
  echo 1>&2 "Wrong number of arguments."
  show_usage_and_exit 1
fi

PROJ_BUCKET="$1"
PROJ_ENVIRONMENT="$2"
VALIDATION_FOLDER="${3:-$DEFAULT_VALIDATION_FOLDER}"

case $VALIDATION_FOLDER in
  validation*)
      true;;
  *)
      echo 1>&2 "Bad folder name, should start with 'validation'"
      exit 1
      ;;
esac

# Figure out the "safe" name that drops suspicious characters (replacing them with '_').
SAFE_ENVIRONMENT="$(echo -n "$PROJ_ENVIRONMENT" | tr -cs '_a-zA-Z0-9' '_')"
SAFE_ENVIRONMENT="$(echo -n "$PROJ_ENVIRONMENT" | tr -cs '_a-zA-Z0-9' '_')"
SAFE_VALIDATION_FOLDER="$(echo -n "$VALIDATION_FOLDER" | tr -cs '_a-zA-Z0-9' '_')"
VALIDATION_DATABASE="${SAFE_VALIDATION_FOLDER}_${SAFE_ENVIRONMENT}"

# Try first environment specific file, then general one.
S3_SOURCE_CREDENTIALS="s3://$PROJ_BUCKET/$PROJ_ENVIRONMENT/config/credentials_$SAFE_ENVIRONMENT.sh"
if ! aws s3 ls "$S3_SOURCE_CREDENTIALS" >/dev/null; then
  S3_SOURCE_CREDENTIALS="s3://$PROJ_BUCKET/$PROJ_ENVIRONMENT/config/credentials.sh"
  if ! aws s3 ls "$S3_SOURCE_CREDENTIALS" >/dev/null; then
    echo "Check whether you have access to \"$S3_SOURCE_CREDENTIALS\"!"
    exit 2
  fi
fi
S3_TARGET_CREDENTIALS="s3://$PROJ_BUCKET/$PROJ_ENVIRONMENT/$VALIDATION_FOLDER/config/credentials_validation.sh"

echo "Using as source: $S3_SOURCE_CREDENTIALS"
echo "Using as target: $S3_TARGET_CREDENTIALS"

TMP_SOURCE_FILE="$(mktemp)"
TMP_TARGET_FILE="$(mktemp)"
# shellcheck disable=SC2064
trap "rm -f \"$TMP_SOURCE_FILE\" \"$TMP_TARGET_FILE\"" EXIT
set -o xtrace

# Step 1: Download credentials
aws s3 cp "$S3_SOURCE_CREDENTIALS" "$TMP_SOURCE_FILE"
# Step 2: ???
sed -ne "/^DATA_WAREHOUSE_ETL=/s,:5439/\([a-zA-Z0-9_]*\),:5439/$VALIDATION_DATABASE,p" \
  <"$TMP_SOURCE_FILE" >"$TMP_TARGET_FILE"
# Step 3: Profit
aws s3 cp "$TMP_TARGET_FILE" "$S3_TARGET_CREDENTIALS"
